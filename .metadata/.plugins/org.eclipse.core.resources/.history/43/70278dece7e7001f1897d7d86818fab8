/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stm32f411xx.h>

int main(void){
	GPIO_Handle_t LED_0;
	LED_0.GPIOx = GPIOD;
	LED_0.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_15;
	LED_0.GPIO_PinConfig.GPIO_PinMode = GPIO_OUTPUT_MODE;
	LED_0.GPIO_PinConfig.GPIO_PinOPType = 0;
	HAL_GPIO_Init(&LED_0);

	GPIO_Handle_t LED_1;
	LED_1.GPIOx = GPIOD;
	LED_1.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_14;
	LED_1.GPIO_PinConfig.GPIO_PinMode = GPIO_OUTPUT_MODE;
	LED_1.GPIO_PinConfig.GPIO_PinOPType = 0;
	HAL_GPIO_Init(&LED_1);

	GPIO_Handle_t LED_2;
	LED_2.GPIOx = GPIOD;
	LED_2.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_13;
	LED_2.GPIO_PinConfig.GPIO_PinMode = GPIO_OUTPUT_MODE;
	LED_2.GPIO_PinConfig.GPIO_PinOPType = 0;
	HAL_GPIO_Init(&LED_2);

	GPIO_Handle_t LED_3;
	LED_3.GPIOx = GPIOD;
	LED_3.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_12;
	LED_3.GPIO_PinConfig.GPIO_PinMode = GPIO_OUTPUT_MODE;
	LED_3.GPIO_PinConfig.GPIO_PinOPType = 0;
	HAL_GPIO_Init(&LED_3);

	// GPIO_Handle_t BTN;
	// BTN.GPIOx = GPIOA;
	// BTN.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_0;
	// BTN.GPIO_PinConfig.GPIO_PinMode = GPIO_INPUT_MODE;
	// BTN.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PD;
	// HAL_GPIO_Init(&BTN);
	while(true){
		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_SET);
		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_SET);
		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_SET);
		for(int i = 0; i < 500000; i++){
			// wait
		}
		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, GPIO_PIN_RESET);
		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14, GPIO_PIN_RESET);
		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
		HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12, GPIO_PIN_RESET);
		for(int i = 0; i < 500000; i++){
			// wait
		}
	}
	return 0;
}

int main(void) {
	GPIO_InitTypeDef GPIO_InitStruct;
	HAL_Init();
	__HAL_RCC_GPIOC_CLK_ENABLE();
	/* Configure GPIO pin : PC4 */
	GPIO_InitStruct.Pin = GPIO_PIN_4;
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
	GPIO_InitStruct.Pull = GPIO_NOPULL;
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
	/* Configure GPIO pin : PC8 */
	GPIO_InitStruct.Pin = GPIO_PIN_8;
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
	GPIO_InitStruct.Pull = GPIO_NOPULL;
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
	HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
	while(1) {
		GPIOC->ODR = 0x110;
		GPIOC->ODR = 0;
	}
}
